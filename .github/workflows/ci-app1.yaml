name: ci-app1

on:
  push:
    branches:
      - 'vprocopan'
      - 'main'
      - 'klincharov'
      - 'test'
    paths:
      - 'apps/app1/**'
      - '!apps/app1/.version'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history
      - 
        name: Git Version
        uses: codacy/git-version@2.2.0
        with:
          prefix: cluster-
          log-path: cluster/
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Get SemVer from file
        id: semver-reader
        uses: juliangruber/read-file-action@v1
        with:
          path: ./apps/app1/.version
          
      -
        name: Parse and Load SemVer
        run: |
          IFS='.'
          read -a semver <<< ${{ steps.semver-reader.outputs.content }}
          
          if [ -z "${semver[0]}" ] || [ -z "${semver[1]}" ] || [ -z "${semver[2]}" ]; then      # basic format check
            echo "Error: Invalid semver format."
            exit 1
          fi
          
          echo "GITHUB_SHA_VALUE=`echo $GITHUB_SHA | cut -c 9- `" >> $GITHUB_ENV                # extract github sha (value only) and add to env 
          echo "V_MAJOR=${semver[0]}" >> $GITHUB_ENV                                            # setting major semver version value 
          echo "V_MINOR=${semver[1]}" >> $GITHUB_ENV                                            # setting minor semver version value
          echo "V_PATCH=$GITHUB_RUN_NUMBER" >> $GITHUB_ENV                                      # setting patch semver version value
        
      -
        name: Save current version
        run: | 
          echo "${{ env.V_MAJOR }}.${{ env.V_MINOR }}.${{ env.V_PATCH }}" > ./apps/app1/.version  
          git config --local user.name "${{ secrets.GH_USERNAME }}"                             # GitHub username would need to be provided for this step as actions secret
          git add ./apps/app1/.version
          git commit -m "Change local .version file for ${{ env.GITHUB_SHA_VALUE }}"            
          
      -
        name: Push current version file
        uses: ad-m/github-push-action@master
        with: 
          github_token: ${{ secrets.GH_PASSWORD }}                                              # GitHub password would need to be provided for this step as actions secret
          branch: ${{ github.ref }}

      - 
        name: Build and push app1
        uses: docker/build-push-action@v3
        with:
          context: apps/app1/.
          push: true
          tags: |
            aandonov/app1:stage-v${{ env.V_MAJOR }}.${{ env.V_MINOR }}.${{ env.V_PATCH }}-${{ env.GITHUB_SHA_VALUE }}
            aandonov/app1:latest
          # tags: aandonov/app1:{MAJOR}.{MINOR}.{PATCH}-{sanitized-branch-name}.{commits-distance}.{hash}
